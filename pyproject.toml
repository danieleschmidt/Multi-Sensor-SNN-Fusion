[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "snn-fusion"
dynamic = ["version"]
description = "Neuromorphic multi-modal sensor fusion framework with spiking neural networks"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Terragon Labs", email = "research@terragonlabs.com"},
]
maintainers = [
    {name = "Terragon Labs", email = "research@terragonlabs.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dependencies = [
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "torchaudio>=2.1.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "norse>=1.0.0",
    "snntorch>=0.6.0",
    "pandas>=2.0.0",
    "h5py>=3.8.0",
    "opencv-python>=4.8.0",
    "librosa>=0.10.0",
    "pywavelets>=1.4.0",
    "pyyaml>=6.0",
    "tqdm>=4.65.0",
    "click>=8.1.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]
hardware = [
    "lava-dl>=0.5.0",
    "pyNN>=0.10.0",
]
viz = [
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "plotly>=5.0.0",
]

[project.scripts]
snn-fusion = "snn_fusion.cli:main"
snn-train = "snn_fusion.training.cli:main"
snn-deploy = "snn_fusion.hardware.cli:main"

[project.urls]
Homepage = "https://github.com/terragonlabs/Multi-Sensor-SNN-Fusion"
Documentation = "https://snn-fusion.readthedocs.io/"
Repository = "https://github.com/terragonlabs/Multi-Sensor-SNN-Fusion"
"Bug Tracker" = "https://github.com/terragonlabs/Multi-Sensor-SNN-Fusion/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "snn_fusion.__version__"}

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "hardware: marks tests that require neuromorphic hardware",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true