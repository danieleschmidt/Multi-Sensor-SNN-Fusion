[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=snn_fusion
    --cov-report=term-missing
    --cov-report=html:outputs/coverage
    --cov-report=xml:outputs/coverage.xml
    --junit-xml=outputs/junit.xml
    --disable-warnings

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    gpu: marks tests that require GPU
    hardware: marks tests that require neuromorphic hardware
    integration: marks integration tests
    performance: marks performance benchmark tests
    api: marks API integration tests
    unit: marks unit tests

# Filtering options
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
    # Ignore specific warnings from dependencies
    ignore:.*distutils.*:DeprecationWarning
    ignore:.*imp module.*:DeprecationWarning
    ignore:.*torch.*:UserWarning

# Test timeout (in seconds)
timeout = 300
timeout_method = thread

# Minimum version
minversion = 7.0

# Parallel execution
# Uncomment to enable parallel test execution
# addopts = -n auto

# Log capture
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Live logging
log_auto_indent = true