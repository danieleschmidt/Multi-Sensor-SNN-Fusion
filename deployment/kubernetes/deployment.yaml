apiVersion: apps/v1
kind: Deployment
metadata:
  name: snn-fusion-api
  namespace: snn-fusion
  labels:
    app: snn-fusion-api
    version: v1.0.0
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: snn-fusion-api
  template:
    metadata:
      labels:
        app: snn-fusion-api
        version: v1.0.0
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: snn-fusion-api
        image: snn-fusion:v1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: ENV
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: snn-fusion-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: snn-fusion-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: snn-fusion-secrets
              key: secret-key
        - name: NEUROMORPHIC_HARDWARE_ENABLED
          valueFrom:
            configMapKeyRef:
              name: snn-fusion-config
              key: neuromorphic-hardware-enabled
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: models
          mountPath: /app/models
        - name: data
          mountPath: /app/data
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: snn-fusion-logs-pvc
      - name: models
        persistentVolumeClaim:
          claimName: snn-fusion-models-pvc
      - name: data
        persistentVolumeClaim:
          claimName: snn-fusion-data-pvc
      - name: config
        configMap:
          name: snn-fusion-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - snn-fusion-api
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "high-memory"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: snn-fusion-api-service
  namespace: snn-fusion
  labels:
    app: snn-fusion-api
spec:
  selector:
    app: snn-fusion-api
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: snn-fusion-ingress
  namespace: snn-fusion
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.snn-fusion.com
    secretName: snn-fusion-tls
  rules:
  - host: api.snn-fusion.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: snn-fusion-api-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: snn-fusion-api-hpa
  namespace: snn-fusion
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: snn-fusion-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60