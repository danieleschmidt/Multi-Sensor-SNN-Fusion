# SNN-Fusion Kubernetes Deployment Configuration
# Production-ready deployment with auto-scaling and monitoring

apiVersion: v1
kind: Namespace
metadata:
  name: snn-fusion
  labels:
    name: snn-fusion
    environment: production

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: snn-fusion-config
  namespace: snn-fusion
data:
  SNN_FUSION_ENV: "production"
  SNN_FUSION_LOG_LEVEL: "INFO"
  SNN_FUSION_WORKERS: "4"
  SNN_FUSION_CACHE_SIZE_MB: "1000"
  SNN_FUSION_MONITORING_ENABLED: "true"
  SNN_FUSION_HEALTH_CHECK_INTERVAL: "30"
  SNN_FUSION_BACKUP_ENABLED: "true"
  SNN_FUSION_SECURITY_ENABLED: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: snn-fusion-secrets
  namespace: snn-fusion
type: Opaque
data:
  # Base64 encoded secrets (replace with actual values)
  redis-password: c25uX2Z1c2lvbl9jYWNoZQ== # snn_fusion_cache
  database-password: c25uX2Z1c2lvbl9kYg== # snn_fusion_db
  jwt-secret: c25uX2Z1c2lvbl9qd3Q= # snn_fusion_jwt

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snn-fusion-app
  namespace: snn-fusion
  labels:
    app: snn-fusion
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: snn-fusion
  template:
    metadata:
      labels:
        app: snn-fusion
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: snn-fusion
        image: snn-fusion:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: SNN_FUSION_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: snn-fusion-config
        - secretRef:
            name: snn-fusion-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
        - name: snn-data
          mountPath: /home/snn_user/data
        - name: snn-logs
          mountPath: /home/snn_user/logs
        - name: snn-models
          mountPath: /home/snn_user/models
        - name: config-volume
          mountPath: /home/snn_user/config
      volumes:
      - name: snn-data
        persistentVolumeClaim:
          claimName: snn-fusion-data-pvc
      - name: snn-logs
        persistentVolumeClaim:
          claimName: snn-fusion-logs-pvc
      - name: snn-models
        persistentVolumeClaim:
          claimName: snn-fusion-models-pvc
      - name: config-volume
        configMap:
          name: snn-fusion-config
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "node-role.kubernetes.io/compute"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: snn-fusion-service
  namespace: snn-fusion
  labels:
    app: snn-fusion
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: snn-fusion

---
apiVersion: v1
kind: Service
metadata:
  name: snn-fusion-headless
  namespace: snn-fusion
  labels:
    app: snn-fusion
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: snn-fusion

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: snn-fusion-ingress
  namespace: snn-fusion
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - snn-fusion.yourdomain.com
    secretName: snn-fusion-tls
  rules:
  - host: snn-fusion.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: snn-fusion-service
            port:
              number: 8000

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: snn-fusion-hpa
  namespace: snn-fusion
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: snn-fusion-app
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snn-fusion-data-pvc
  namespace: snn-fusion
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snn-fusion-logs-pvc
  namespace: snn-fusion
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snn-fusion-models-pvc
  namespace: snn-fusion
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: snn-fusion-pdb
  namespace: snn-fusion
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: snn-fusion

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: snn-fusion-sa
  namespace: snn-fusion

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: snn-fusion
  name: snn-fusion-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: snn-fusion-rolebinding
  namespace: snn-fusion
subjects:
- kind: ServiceAccount
  name: snn-fusion-sa
  namespace: snn-fusion
roleRef:
  kind: Role
  name: snn-fusion-role
  apiGroup: rbac.authorization.k8s.io